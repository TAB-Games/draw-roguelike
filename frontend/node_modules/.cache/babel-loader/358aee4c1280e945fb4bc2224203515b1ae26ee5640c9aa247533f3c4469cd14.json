{"ast":null,"code":"import { take, fork, put, call, delay, cancel } from \"redux-saga/effects\";\nimport { cancelGame, startGame } from \"../slices/gameInit\";\nimport { fetchQuizFromApi } from \"../../utils/api\";\nimport { fetchQuestionsSuccess, fetchQuestionsFail } from \"../slices/game\";\nfunction* fetchQuestionsSaga() {\n  try {\n    yield delay(500);\n    const data = yield call(fetchQuizFromApi);\n    yield put(fetchQuestionsSuccess(data));\n  } catch (error) {\n    put(fetchQuestionsFail(\"Failed to fetch questions\"));\n  }\n}\nfunction* cancelFetchQuiz(forkedSaga) {\n  while (true) {\n    yield take(cancelGame.type);\n    yield cancel(forkedSaga);\n  }\n}\nexport default function* startGameSaga() {\n  while (true) {\n    yield take(startGame.type);\n    const forkedSaga = yield fork(fetchQuestionsSaga);\n    yield fork(cancelFetchQuiz, forkedSaga);\n  }\n}","map":{"version":3,"names":["take","fork","put","call","delay","cancel","cancelGame","startGame","fetchQuizFromApi","fetchQuestionsSuccess","fetchQuestionsFail","fetchQuestionsSaga","data","error","cancelFetchQuiz","forkedSaga","type","startGameSaga"],"sources":["/Users/ZIW2927/Documents/practice/draw-roguelike/frontend/src/store/saga/gameInit.js"],"sourcesContent":["import { take, fork, put, call, delay, cancel } from \"redux-saga/effects\";\nimport { cancelGame, startGame } from \"../slices/gameInit\";\nimport { fetchQuizFromApi } from \"../../utils/api\";\nimport { fetchQuestionsSuccess, fetchQuestionsFail } from \"../slices/game\";\n\nfunction* fetchQuestionsSaga() {\n  try {\n    yield delay(500);\n    const data = yield call(fetchQuizFromApi);\n    yield put(fetchQuestionsSuccess(data));\n  } catch (error) {\n    put(fetchQuestionsFail(\"Failed to fetch questions\"));\n  }\n}\n\nfunction* cancelFetchQuiz(forkedSaga) {\n  while (true) {\n    yield take(cancelGame.type);\n    yield cancel(forkedSaga);\n  }\n}\n\nexport default function* startGameSaga() {\n  while (true) {\n    yield take(startGame.type);\n    const forkedSaga = yield fork(fetchQuestionsSaga);\n    yield fork(cancelFetchQuiz, forkedSaga);\n  }\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,oBAAoB;AACzE,SAASC,UAAU,EAAEC,SAAS,QAAQ,oBAAoB;AAC1D,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,qBAAqB,EAAEC,kBAAkB,QAAQ,gBAAgB;AAE1E,UAAUC,kBAAkBA,CAAA,EAAG;EAC7B,IAAI;IACF,MAAMP,KAAK,CAAC,GAAG,CAAC;IAChB,MAAMQ,IAAI,GAAG,MAAMT,IAAI,CAACK,gBAAgB,CAAC;IACzC,MAAMN,GAAG,CAACO,qBAAqB,CAACG,IAAI,CAAC,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdX,GAAG,CAACQ,kBAAkB,CAAC,2BAA2B,CAAC,CAAC;EACtD;AACF;AAEA,UAAUI,eAAeA,CAACC,UAAU,EAAE;EACpC,OAAO,IAAI,EAAE;IACX,MAAMf,IAAI,CAACM,UAAU,CAACU,IAAI,CAAC;IAC3B,MAAMX,MAAM,CAACU,UAAU,CAAC;EAC1B;AACF;AAEA,eAAe,UAAUE,aAAaA,CAAA,EAAG;EACvC,OAAO,IAAI,EAAE;IACX,MAAMjB,IAAI,CAACO,SAAS,CAACS,IAAI,CAAC;IAC1B,MAAMD,UAAU,GAAG,MAAMd,IAAI,CAACU,kBAAkB,CAAC;IACjD,MAAMV,IAAI,CAACa,eAAe,EAAEC,UAAU,CAAC;EACzC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}